#include <iostream>

#include "LeptonThread.h"

#include "Palettes.h"
#include "SPI.h"
#include "Lepton_I2C.h"

#include <linux/videodev2.h>
void LeptonThread::updateVpipe()
{
	QImage tmpImage;
	tmpImage = myImage.convertToFormat(QImage::Format_RGB888);
	memcpy(vidsendbuf, tmpImage.bits(), 320*240*3);
}

void LeptonThread::open_vpipe() {
    int vidsendsiz;
    v4l2sink = open("/dev/video0", O_WRONLY);
    if (v4l2sink < 0) {
        fprintf(stderr, "Failed to open v4l2sink device. (%s)\n", strerror(errno));
        exit(-2);
    }

    struct v4l2_format v;
    memset(&v, 0, sizeof(v));

    v.type = V4L2_BUF_TYPE_VIDEO_OUTPUT;
    v.fmt.pix.width = 320;
    v.fmt.pix.height = 240;
    v.fmt.pix.pixelformat = V4L2_PIX_FMT_RGB24;
    vidsendsiz = 320 * 240 * 3;

    v.fmt.pix.sizeimage = vidsendsiz;
    if (ioctl(v4l2sink, VIDIOC_S_FMT, &v) < 0) {
        fprintf(stderr, "Failed to set format on v4l2sink. (%s)\n", strerror(errno));
        exit(-1);
    }

    vidsendbuf = (uchar*)malloc(vidsendsiz);
}



